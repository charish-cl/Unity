复习：
1理论：冒泡，{接口}，【泛型】委托，泛型约束  记住！
2练习：冒泡题目，
       接口练习比较器，
       回家做事【复习！！！】
       两个对象返回大对象！
      以上练习 融会贯通 
3每日一练：day01基本能做出来 ok！
---------------------------------------  

1》接口和泛型的结合 泛型接口
   如果有对应的泛型数据类型 优先选择泛型！
2》实现数组工具类的 通用的升序排序的方法【重点】
   实现复杂的方法 
   1）一气呵成法【学过的掌握的很好，已经融会贯通】
   2）推导法【学过的会的简单出发，需求越来越复杂】
3》推导法 实现数组工具类的 通用的升序排序的方法  
   复杂问题简单化
   分析复杂的问题：通用的升序排序
                   1>对任何数据类型的数组【集合】
                   2>按照数据类型的任何属性
   简单步骤1：实现 整数数组排序的方法 冒泡法
   简单步骤2：实现 string数组排序的方法 冒泡法
       步骤22：整数数组   string数组 都可以 
---------------------------------------------   
   ？？步骤3：实现 学生  数组排序的方法 冒泡法？？
              定义了重载方法，
          一个方法 对整数 string数组，自定义对象数组按默认字段
          另一个方法 对自定义对象数组按非默认字段 排序
      步骤3：缺陷  OrderBy3 两个方法 放弃！
            【麻烦！1》两个方法2》非默认字段很多 代码膨胀
             接口不行》委托！更灵活【更好维护】

      步骤4：OrderBy4 引入委托！！
             【1》一个方法 3》代码简洁！】 
             多样性的需求，不确定的 用委托表示
            【按照对象的 哪个属性排序，都有可能】
            总结：1）OrderBy3基础上改进的
                  2）把泛型接口参数换成 泛型委托参数
                  3）把约束 修改成 针对 属性的约束！
                  4）好处：T不需要实现比较接口，
                     按照其它属性排序不需要引入数据类型
――--------------------------------------------------
    消化一下刚才推导过程，自己测试一下！【10分钟+15分钟】
____________________________________________________
 练习1：实现数组工具类的 通用的升序排序的方法OrderBy
        推导法，消化，理解，记住！
 
 练习2：实现数组工具类的 通用的降序排序的方法OrderByDescending 
        一气呵成法【参考升序】
 练习3：实现数组工具类的 通用的返回最大的方法Max        
 练习4：实现数组工具类的 通用的返回最小的方法Min 

 练习5：实现数组工具类的 通用的查找的方法 Find
        给定一个查找的条件？ 返回满足条件的一个
        id=1
        name="zs"
        id>1
        id>1&&name!="zs"&&tall>180
        条件不确定，多样的？
        委托 表示条件 共性 返回类型 bool 参数 要T
 练习6：实现数组工具类的 通用的查找所有的方法 FindAll
        给定一个查找的条件？ 返回满足条件的所有的

 练习7：选择：选取数组中对象的某些成员形成一个独立的数组
        多个学生【id age tall score】   【60,50,70,80】
                                        【“zs”，“ls”】
        注册：zs
 
  ArrayHelper：要求 基本要求： 会调用
                    尽力搞懂： 搞不懂不影响后边的学习！
――――――――――――――――――――――――――――――
  【不要为难自己：尽力搞懂，搞不懂；放一放！
                  理解了 会用
                  不理解 用即可！】
――――――――――――――――――――――――――――

 

                 






                     
    










