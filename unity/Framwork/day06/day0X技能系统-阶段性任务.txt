技能系统  的实现 12+21=33！
**简要的介绍，分析，设计》
  设计类图 ：框架图【总图】记在心中
**根据设计类图实现
阶段1：ARPGDemo2.2 实现技能管理类及相关的类，
                   可以管理技能；测试

阶段2：ARPGDemo2.3 实现技能攻击选择相关的类，
                   可以选择不同范围的目标；测试

阶段3：ARPGDemo2.4 实现对目标和自身影响相关的类，
                   可以实现对目标和自身影响；测试1,2,

阶段4：ARPGDemo2.5 实现技能攻击动画以及外观类，测试


阶段5：ARPGDemo2.6 导入逼真的场景和模型！
――――――――――――――――――――――――――――
********************************************


_________________________________________________


阶段4：ARPGDemo2.5 实现技能攻击动画以及外观类，测试

1>事件设计模式【观察者模式】
  1，联动  常规 ：      F1    F2 【方法：事件处理程序，响应程序】
     事件 ：4步         注册；F1  【F2自动调用】 
  2，实现  AnimationEventBehaviour 【1,3】？【2,4】
            行为1发生 》 播放动画  》
     动画组件：动画=攻击动画》攻击方法：触发攻击事件》其它行为

2>添加外观类
  1，生活的例子  系统1【很多数据类型】 
                 中间类-外观类-中介机构 系统2  系统3
     【定义】软件 外观类：本质上就是一个类，主要功能，
                         负责其它系统访问【接入】本系统

                         系统1-外观类-系统2

     【为什么使用】引入目的好处：
                   方便其它系统使用本系统，  【对于使用者 调用方】
                   保护当前系统的安全性稳定性【对于被调用方】

  2，实现外观类：代码复杂【中介 很忙】 
                 根据类图实现 10分钟
           注意：添加到角色系统文件夹里：

3》不让 角色系统直接使用技能系统中的类，要使用外观类！！！
   修改类CharacterInputController 
4》测试：界面设置，运行!
   1) 把脚本CharacterSkillSystem给player
   2）把脚本AnimationEventBehaviour给模型player子物体
   3）修改动画组件！动画组件》调用OnAttack OnCancelAnim的方法
      
   从3D/中找片段》events 两个白色的竖线：OnAttack OnCancelAnim
   原理：动画组件【内置】>设置事件：
         调用方法AnimationEventBehaviour
   4）给Skills做设置 AnimationName：attack1，
                     AnimationName：attack2
――――――――――――――――――――――――

下载资料：真实的场景。在哪里？ 
   本地：common 登录：  /课程资源/Month03/ ARPGAssets.rar
__ 远程：传_

作业1：完善ARPGDemo2.5的版本，然后备份。
作业2：
阶段5：ARPGDemo2.6 导入逼真的场景和模型！
1>下载资源 解压！拷贝 粘贴 全覆盖 到Assets里！
2>打开最新的场景！
3>制作预制件  1主角 和 2Easytouch做成预制件 放到一个文件夹
4>找levels里的场景打开
   了解，看看！
  0) 把技能预制件 放到Resources根目录中
     对于技能要挂 近身 施放器脚本！
  1) 放入主角 找一个地方放主角！参考点：Particles/Lightshaft
     EasyTouch放入
     修改Skills：技能的属性，使用新的技能预制件
     再添加一个技能按钮，修改角色输入脚本！
  2）放入小怪 找一个合适的地方【主角周围】把丢失脚本移除！
     注意 给小怪挂脚本
          要设置必要的属性值！！
  开始按照步骤做：注意运用调试方法和技巧！
  找一找！1》遇到问题：尝试了哪些方法找错误！
             总结：常规；事件【间接 使用技能攻击，播放动画，OnAttack】
          2》计算机的运算 都是变成二进制计算的
             代码 整数的计算  实际  二进制的计算 ==？>=  <=?
          3》调试方法 死循环  HP   找代码中所有的循环语句
-------
任务：里程牌！技能系统！
      阶段性优化 改进！
优化1：资源管理 资源：Assets：模型，组件：脚本，.....
                     Resources:预制件资源【动态加载】
      1问题：预制件资源不可能都放在根目录中，
            分类管理，分到不同的子文件夹管理【合理的】


      如何读取：出错【代码从资源Resources根目录中找！】
                怎么办？解决办法：让代码从实际目录中找ok！
                需要告诉程序，每个预制件的实际目录！
                引入专门的文件：地图文件=资源配置文件
      1)资源配置文件:本质文本文件【.txt=.ini】
                     特点：键=值
       技能名称=技能的实际路径
       BaseMeleeAttackSkill=Skill\BaseMeleeAttackSkill
       Hit_Ice_Chest=Skill\HitFx\Hit_Ice_Chest
      2 问题 ：如何生成资源配置文件 1）手动 2）自动
               如何自动生成资源配置文件：技术IO技术
      3 代码中要使用资源配置文件》
        提供一个完成以下步骤的类=资源管理类【IO】：

        流程：加载预制件
             【1读取资源配置文件  txt》字典
               2得到所需资源的实际路径
                key：BaseMeleeAttackSkill》value：实际路径
               3从实际路径中加载预制件】
 总结 步骤1：把技能预制件放在原来的文件夹里！
      步骤2：使用【配置文件生成工具】，生成配置文件resMap 
             Editor里边》项目多菜单》点击》查看    
      步骤3：在Common中引入资源管理类
      步骤4：使用资源管理类加载预制件！ 【5分钟】
             CharacterSkillManager
             Resources》ResourceManager 【10分钟休息】
---------------------------------------------
优化2：程序集反射
      1》程序集 看笔记
      2》unity中使用dll。找到【添加引用】命令
                         视图：类视图》选中项目位置》找到命令
  
      反射:什么是反射；用在哪里，用途1,2,3
           项目中：使用反射动态创建对象 好处！复用维护性好！
           反射使用步骤1,2    

day07
   资源管理+程序集反射  
   网络编程：
   1》基本概念
   2》编程步骤方法
   目的：面试！
         能看懂网络编程的代码！
   问题：深入的自学！根据公司的需求去学！
         公司需要：net WCF技术 最新 功能最强大的 网络编程框架
                       WCF书籍！
   ――――――――――――――――――――――――――――


   












