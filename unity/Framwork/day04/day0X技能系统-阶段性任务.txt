技能系统  的实现 12+21=33！
**简要的介绍，分析，设计》
  设计类图 ：框架图【总图】记在心中
**根据设计类图实现
阶段1：ARPGDemo2.2 实现技能管理类及相关的类，
                   可以管理技能；测试

阶段2：ARPGDemo2.3 实现技能攻击选择相关的类，
                   可以选择不同范围的目标；测试

阶段3：ARPGDemo2.4 实现对目标和自身影响相关的类，
                   可以实现对目标和自身影响；测试1,2,

阶段4：ARPGDemo2.5 实现技能攻击动画以及外观类，测试


阶段5：ARPGDemo2.6 导入逼真的场景和模型！
――――――――――――――――――――――――――――
********************************************
阶段1：ARPGDemo2.2 实现技能管理类及相关的类，
                   可以管理技能；测试
1》打开最新版本的项目，添加Scripts/Skill文件夹
2》根据类图实现3个数据类型
   SkillData，【不直接挂在物体上 间接挂在物体上】
   SkillAttackType，
   DamageMode【10】
   1）公共字段和属性！【如果脚本挂{直接 或间接}在物体】
   2）ClassA脚本不直接给物体，去掉MonoBehaviour
      但是，ClassA这个脚本要在其它脚本ClassB使用，
      而且要在unity属性窗口访问ClassA这个脚本的字段【赋值】
      就给ClassA加[Serializable]！
   3）脚本的字段很多
      【类型简单】有的在属性窗口赋值：
      【类型复杂】有的不适合在属性窗口赋值：一般Start中赋值
                  没必要在属性窗口出现！
                  改成private不出现了，可是也无法在其它类中访问
                  希望：不在属性窗口出现，但在其它类中可以访问
                        加 [HideInInspector] public
   4）注意：注意命名空间ARPGDemo.Skill 

3》根据类图 实现技能管理类 
   步骤1：实现主要结构 
   步骤2：实现细节【消化10分钟】【休息15分钟】
4》为了方便测试，暂时先实现施放器类部分功能
   见 《技能》中的类图
            
5》测试技能管理可以管理技能
   1)找到主角运动的场景
   2)找到目录：Resources
     放入一个Cube一个Sphere，充当技能预制件！
     给Cube，Sphere挂施放器脚本
   3）给Player挂技能管理脚本,设置skills属性：
      Size：2
      SkillID， PrefabName：Cube，Sphere
   4）添加两个虚拟按钮，设置属性： Skill1，Skill2
      写代码：修改CharacterInputController
   5）给Player挂PlayStatus 设置SP不能为0；
   6）运行 
  总结：遇到的错误，怎么解决！【修改错误，找到错误】
――――――――――――――――――――――――

阶段2：ARPGDemo2.3 实现技能攻击选择相关的类，
                   可以选择不同范围的目标；测试
1》根据类图 创建 三个接口，分别放在不同文件夹里，命名空间一样
    AttackSelector,SelfImpact,TargetImpact
2》实现IAttackSelector：CircleAttackSelector！
3》实现SectorAttackSelector
4》测试技能攻击选择算法 可以根据需要选择不同范围的目标
   1)新建场景，添加Cube Sphere 设置tag都为Enemy，
     都添加脚本MonosterStatus 设置HP 100
     各自复制多个，
   2）添加Capsule,给添加脚本TestAttackSelector，并实现
                  分别使用圆形或扇形攻击选择类
   3）运行
   休息10分钟！备份ARPGDemo2.3
 ――――――――――――――――  

阶段3：ARPGDemo2.4 实现对目标和自身影响相关的类，
                   可以实现对目标和自身影响；测试
1》实现自身影响接口和类 SP减少！【10分钟】
   CostSPSelfImpact
2》为实现实现目标身影响做准备工作。
   2.1 练习：【15分钟】
   引入TransformHelper这个类，放入Common中
   类中包含方法：1,FindChild
                 2,提取一个方法放入当前类中  
                   从马达类中提取 【转向】的方法，
                   删除马达中的这个方法，
                   让程序仍然能正常运行！

   2.2实现OnDamage!【业务 策划！实现简单的业务HP】
   1）生命值变化 HP减少
   2）定义受击特效挂载点并初始化
   3）给主角添加空物体作为受击特效挂载点
3》实现目标影响接口和类 HP减少！
   1）根据类图，实现类DamageTargetImpact 
      基本完成！！ 
     【5分钟】 
      DamageTargetImpact》角色状态的OnDamage方法+受击特效访问点
4》继续实现施放器。根据类图继续实现！   
 4.1>引入施放器配置工厂类
   类【方法】 特点：
   根据条件的不同返回不同的对象，   对象有共同的父类
   工厂设计模式【简单工厂，抽象工厂】
   生活：工厂 加工产品，共性
         钢厂：钢，螺纹的，三角的
         饭店：饭，
   1）初始化施放器的字段：专门的类》调用
                          施放器配置工厂
      start调用，属性调用！
   2）根据类图 施放器作为抽象的类，
               包含施放技能的抽象方法
   3）创建一个近身技能施放器，实现！
 4.2 实现相应的方法：
      注意1：方法中使用 属性名还是字段名【注意不同】
          2：回收技能，立即回收【本质也是延时回收】
 4.3 实现近身技能施放器。

5》测试 对自身和目标的影响
          自身 SP减少 目标HP减少 ！ok
   1）找到最新版本的场景
      到Resources目录中，重新挂施放器【近身】
   2）加敌人，用胶囊表示，复制多个【2个】，放在主角周围
      给敌人 tag：Enmey；加脚本MonsterStatus HP：100！！   
   3）Player要设置SP：100，Damage【基础伤害】：5 ！！
      设计Skills属性，每个技能
                     Attack Target Tags：1，Enemy
                     AttackDistance：2
                     Damage【伤害比率】：1【100%】!!
6》下载资料：真实的场景。在哪里？ 
   common登录：  /课程资源/Month03/ ARPGAssets.rar
__ 远程：_
_________________________________________________


阶段4：ARPGDemo2.5 实现技能攻击动画以及外观类，测试
1>事件设计模式【观察者模式】
  1，联动  常规 ：      F1    F2
     事件 ：            注册；F1  【F2自动调用】 
  2，实现  AnimationEventBehaviour 【1,3】？【2,4】

2>添加外观类
  1，生活的例子  系统1【很多数据类型】 中间类-外观类-中介机构 系统2  系统3
     软件 外观类：本质上就是一个类，主要功能，
               负责其它系统访问【接入】本系统
               系统1-外观类-系统2
      引入目的：方便其它系统使用本系统，  【对于使用者 调用方】
                保护当前系统的安全性稳定性【对于被调用方】

  2，实现外观类：代码复杂【中介 很忙】 
              根据类图实现 10分钟+15分钟休息
              注意：添加到角色系统文件夹里：

3>不让 角色系统直接使用技能系统中的类，要使用外观类！！！
  修改类CharacterInputController 
4》界面设置，运行!
   1) 把脚本CharacterSkillSystem给player
   2）把脚本AnimationEventBehaviour给模型player子物体
   3）修改动画组件！动画组件》调用OnAttack OnCancelAnim的方法
      
   从3D/中找片段》events 两个白色的竖线：OnAttack OnCancelAnim
   原理：动画组件【内置】>设置事件：调用方法AnimationEventBehaviour
   4）给Skills做设置 AnimationName：attack1，
                     AnimationName：attack2
――――――――――――――――――――――――
作业1：完善ARPGDemo2.5的版本，然后备份。
作业2：
阶段5：ARPGDemo2.6 导入逼真的场景和模型！
1>下载资源 解压！拷贝 粘贴 全覆盖 到Assets里！
2>打开最新的场景！
3>制作预制件  1主角 和 2Easytouch做成预制件 放到一个文件夹
4>找levels里的场景打开
   了解，看看！
  0) 把技能预制件 放到Resources根目录中
     对于技能要挂 近身 施放器脚本！
  1) 放入主角 找一个地方放主角！参考点：Particles/Lightshaft
     EasyTouch放入
     修改Skills：技能的属性，使用新的技能预制件
     再添加一个技能按钮，修改角色输入脚本！
  2）放入小怪 找一个合适的地方【主角周围】把丢失脚本移除！
     注意 给小怪挂脚本
          要设置必要的属性值！！
  开始按照步骤做：注意运用调试方法和技巧！
  找一找！1》遇到问题：尝试了哪些方法找错误！
             总结：常规；事件【间接 使用技能攻击，播放动画，OnAttack】
          2》计算机的运算 都是变成二进制计算的
             代码 整数的计算  实际  二进制的计算 ==？>=  <=?
          3》调试方法 死循环  HP   找代码中所有的循环语句
-------
任务：里程牌！技能系统！
      阶段性优化 改进！
优化1：资源管理 资源：Assets：模型，组件：脚本，.....
                     Resources:预制件资源【动态加载】
      1问题：预制件资源不可能都放在根目录中，
            分类管理，分到不同的子文件夹管理【合理的】


      如何读取：出错【代码从资源Resources根目录中找！】
                怎么办？解决办法：让代码从实际目录中找ok！
                需要告诉程序，每个预制件的实际目录！
                引入专门的文件：地图文件=资源配置文件
      1)资源配置文件:本质文本文件【.txt=.ini】
                     特点：键=值
       技能名称=技能的实际路径
       BaseMeleeAttackSkill=Skill\BaseMeleeAttackSkill
       Hit_Ice_Chest=Skill\HitFx\Hit_Ice_Chest
      2 问题 ：如何生成资源配置文件 1）手动 2）自动
               如何自动生成资源配置文件：技术IO技术
      3 代码中要使用资源配置文件》
        提供一个完成以下步骤的类=资源管理类【IO】：

        流程：加载预制件
             【1读取资源配置文件  txt》字典
               2得到所需资源的实际路径
                key：BaseMeleeAttackSkill》value：实际路径
               3从实际路径中加载预制件】
 总结 步骤1：把技能预制件放在原来的文件夹里！
      步骤2：使用【配置文件生成工具】，生成配置文件resMap 
             Editor里边》项目多菜单》点击》查看    
      步骤3：在Common中引入资源管理类
      步骤4：使用资源管理类加载预制件！ 【5分钟】
             CharacterSkillManager
             Resources》ResourceManager 【10分钟休息】
---------------------------------------------
优化2：程序集反射
      1》程序集 看笔记
      2》unity中使用dll。找到【添加引用】命令
                         视图：类视图》选中项目位置》找到命令
  
      反射:什么是反射；用在哪里，用途1,2,3
           项目中：使用反射动态创建对象 好处！复用维护性好！
           反射使用步骤1,2    

day07
   资源管理+程序集反射  
   网络编程：
   1》基本概念
   2》编程步骤方法
   目的：面试！
         能看懂网络编程的代码！
   问题：深入的自学！根据公司的需求去学！
         公司需要：net WCF技术 最新 功能最强大的 网络编程框架
                       WCF书籍！
   ――――――――――――――――――――――――――――
   












